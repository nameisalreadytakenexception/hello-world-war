# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'd9499d86-ca02-4f55-98cf-4be997425bc6'
  
  # Web app name
  webAppName: 'tomcat549'

  # Environment name
  environmentName: 'tomcat549'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)
    
    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'install'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: 'target'
        Contents: '*.war'
        TargetFolder: $(Build.ArtifactStagingDirectory)
        OverWrite: true

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: $(environmentName)
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure для учащихся (f3ef0eca-ea60-461f-a719-b8ee67022bcd)'
              appType: 'webAppLinux'
              WebAppName: 'tomcat549'
              packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.war'
              RuntimeStack: 'TOMCAT|8.5-java11'
              ScriptType: 'Inline Script'
              InlineScript: |
                pwd
                ls $(System.DefaultWorkingDirectory)/**/            
                ls $(System.DefaultWorkingDirectory)/
                                  appType: 'webAppLinux'
                                  appName: 'tomcat549'
                                  package: '$(Pipeline.Workspace)/drop/*.war'
                                  runtimeStack: 'TOMCAT|8.5-java11'
